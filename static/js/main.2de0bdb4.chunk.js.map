{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","currentDate","Date","this","setInterval","setState","console","log","toLocaleTimeString","prevProps","props","clockName","clearInterval","className","React","Component","App","isClockVisible","hideClock","showClock","setRandomName","Math","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,aADF,IAGEC,MAAe,CACbC,YAAa,IAAIC,MAJrB,uDAOE,WAAqB,IAAD,OAClBC,KAAKJ,QAAUK,aAAY,WACzB,EAAKC,SAAS,CAAEJ,YAAa,IAAIC,OAGjCI,QAAQC,IAAI,EAAKP,MAAMC,YAAYO,wBAClC,OAbP,gCAgBE,SAAmBC,GACbN,KAAKO,MAAMC,YAAcF,EAAUE,WAErCL,QAAQC,IAAR,qCAA0CE,EAAUE,UAApD,eAAoER,KAAKO,MAAMC,cAnBrF,kCAuBE,WACMR,KAAKJ,SACPa,cAAcT,KAAKJ,WAzBzB,oBA6BE,WACE,IAAQE,EAAgBE,KAAKH,MAArBC,YAER,OACE,oBAAGY,UAAU,aAAb,0BAEG,IACAZ,EAAYO,4BApCrB,GAA2BM,IAAMC,WCN3BC,E,4MACJhB,MAAQ,CACNiB,gBAAgB,EAChBN,UAAW,G,EAGbO,UAAY,WACV,EAAKb,SAAS,CAAEY,gBAAgB,K,EAGlCE,UAAY,WACV,EAAKd,SAAS,CAAEY,gBAAgB,K,EAGlCG,cAAgB,WACd,EAAKf,SAAS,CAAEM,UAAWU,KAAKC,Y,4CAGlC,WACE,MAAsCnB,KAAKH,MAAnCiB,EAAR,EAAQA,eAAgBN,EAAxB,EAAwBA,UAExB,OACE,sBAAKE,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,yBACA,sBAAKA,UAAU,eAAf,UAEE,wBACEU,KAAK,SACLC,QAASrB,KAAKgB,UAFhB,wBAOA,wBACEI,KAAK,SACLC,QAASrB,KAAKe,UAFhB,wBAOA,wBACEK,KAAK,SACLC,QAASrB,KAAKiB,cAFhB,gCAQDH,GAAkB,cAAC,EAAD,CAAON,UAAWA,W,GAhD3BG,IAAMC,WAsDTC,ICvDfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2de0bdb4.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  clockName: number;\n}\n\ninterface State {\n  currentDate: Date;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  timerId?: NodeJS.Timeout | undefined;\n\n  state: State = {\n    currentDate: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ currentDate: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.log(this.state.currentDate.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.clockName !== prevProps.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { currentDate } = this.state;\n\n    return (\n      <p className=\"App__clock\">\n        Current time:\n        {' '}\n        {currentDate.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  setRandomName = () => {\n    this.setState({ clockName: Math.random() });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">React clock</h1>\n        <div className=\"App__buttons\">\n\n          <button\n            type=\"button\"\n            onClick={this.showClock}\n          >\n            Show Clock\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.hideClock}\n          >\n            Hide Clock\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.setRandomName}\n          >\n            Set random name\n          </button>\n        </div>\n\n        {isClockVisible && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}